kubectl get pod
kubectl run testpod --image=nginx
kubectl get pod
##delete the pod
112  kubectl delete pod testpod
  113  kubectl get pod
###lets create a deployment 
###as the communcation to k8s happen using kubeapi
vi deploy.yml
####add the below metnioned file

apiVersion: apps/v1 
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
##3specification about the deployment 
spec:
  replicas: 2 #going to create two pod 
  selector: #the purpose of .spec.selector: define how the replicaset is going to find which pod to manage . 
    matchLabels: #the same label i have put using match label expression
      app: nginx
  ###inside the pod we need to deploy our container image. 
  template:
    metadata:
      labels:
       app: nginx 
    spec:
      containers:
      - name: nginx-app 
        image: nginx 
        ports:
        - containerPort: 80   
####update the deployment
 137  kubectl set image deployment nginx-deployment nginx=nginx:1.16.1
  138  kubectl set image deployment nginx-deployment nginx-app=nginx:1.16.1
  139  kubectl get deploy
  140  kubectl get rs
  141  kubectl rollout status deploy nginx-deployment
  142  kubectl describe deploy nginx-deployment

####once you add it till line 34
kubectl apply -f deploy.yml
kubectl get deploy
kubectl get rs
kubectl get pod
####uroll out to previous release
 kubectl set image deployment nginx-deployment nginx-app=nginx:1.161
 141  kubectl rollout status deploy nginx-deployment
  142  kubectl describe deploy nginx-deployment
  143  history
  144  kubectl rollout status deployment nginx-deployment
  145  kubectl get pod
  146  kubectl get rs
  147  kubectl rollout history deployment nginx-deployment
  148  kubectl rollout history deployment nginx-deployment --revision=2
  149  kubectl rollout history deployment nginx-deployment --revision=1
  150  kubectl rollout history deployment nginx-deployment --revision=3
  151  kubectl rollout undo deployment nginx-deployment 
  152  kubectl rollout undo deployment nginx-deployment --to-revision=1
  153  kubectl get deploy
###create service in k8s
156  kubectl get pod 
  157  kubectl get pod - o wide
  158  kubectl get pod -o wide
  159  kubectl expose deployment nginx-deployment --type=ClusterIP --name=nginx-service
  160  kubectl get svc
  161  kubectl describe svc nginx-service
  162  kubectl expose deployment nginx-deployment --type=NodePort --name=nginx-service
  163  kubectl expose deployment nginx-deployment --type=NodePort --name=nginx-service-node
  164  kubectl describe svc nginx-service-node
  165  kubectl get svc
  
  ##3create a service
  apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-03-14T14:39:06Z"
  labels:
    app: nginx
  name: nginx-service
  namespace: default
  resourceVersion: "44148"
  uid: 4785c9ac-76e8-4db1-854a-080d3670db5b
spec:
  clusterIP: 10.103.248.203
  clusterIPs:
  - 10.103.248.203
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 30119
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: nginx
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
  
  #####or you can do a running output
  
  kubectl get svc nginx-service -o yaml  > service.yml
